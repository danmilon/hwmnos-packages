#!/bin/sh /etc/rc.common

# load functions to use UCI
# see http://wiki.openwrt.org/doc/devel/config-scripting
. /lib/functions.sh

# start before networking
START=18
USE_PROCD=1

start_service() {
    reload_service
}

system_config() {
    local cfg="$1"
    local hostname
    config_get hostname "$cfg" hostname
    local ipv4_range=$(uci_get "hwmn.network.ipv4_range")
    uci_set dhcp '@dnsmasq[0]' domainneeded 1
    uci_set dhcp '@dnsmasq[0]' local "/$hostname.node.her.wn/"
    uci_set dhcp '@dnsmasq[0]' domain "$hostname.node.her.wn"
    uci_set dhcp '@dnsmasq[0]' nonegcache 1
    uci_set dhcp '@dnsmasq[0]' rebind_protection 0
    uci_commit dhcp
    if [[ ! -n "$ipv4_range" ]]; then
	logger "hwmn.network.ipv4_range not set, skipping dnsmasq auth configuration"
	if [[ -f "/etc/dnsmasq.conf.bak" ]]; then
	    logger "reverting to backed up dnsmasq configuration /etc/dnsmasq.conf.bak"
	    mv /etc/dnsmasq.conf.bak /etc/dnsmasq.conf
	fi
    else
	logger "hwmn.network.ipv4_range is set, configuring dnsmasq auth"
	cp /etc/dnsmasq.conf /etc/dnsmasq.conf.bak
	# get start ip for given range
	export $(ipcalc.sh "$ipv4_range" 0 255)
	cat >/etc/dnsmasq.conf <<EOF
# FILE GENERATED BY HWMN SERVICE. DO NOT EDIT!
auth-server=ns.${hostname}.node.her.wn,eth0
auth-zone=${hostname}.node.her.wn,${ipv4_range}
host-record=ns.${hostname}.node.her.wn,${START}
EOF
    fi
    # reload configurations that depend on uci changes
    reload_config

    # reload dnsmasq explicitly in case we changed only /etc/dnsmasq.conf in
    # which case reload_config wont reload it
    /etc/init.d/dnsmasq reload
}

reload_service() {
    local enabled
    # do not run if we are disabled by hwmn.generic.enabled
    config_load hwmn
    # if option does not exist, assume disabled (4th argument)
    config_get_bool enabled generic enabled 0
    [[ $enabled == 0 ]] && exit 0

    config_load system
    config_foreach system_config system
}


service_triggers() {
    # reload on /etc/config/hwmn changes (uci)
    procd_add_reload_trigger hwmn
}
